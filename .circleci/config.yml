version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:11.10.0

restore_cache: &restore_cache
  keys:
    - v1-dependencies-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies-

save_cache: &save_cache
  paths:
    - node_modules
  key: v1-dependencies-{{ checksum "package.json" }}

jobs:
  buildNext:
      <<: *defaults
      steps:
        - checkout
        # Download and cache dependencies
        - restore_cache: *restore_cache
        - run: npm install
        - save_cache: *save_cache
        # - run:
        #     name: Building The Next Site
        #     command: npm run buildNext
        - run:
            name: Saving artifact-file
            command: "mkdir -p /tmp/artifacts && cp ./site/.vuepress/deploy-info.json /tmp/artifacts/deploy-info-next.json"
        - store_artifacts:
            path: /tmp/artifacts
        - run:
            name: Deploying to pie-website-next.surge.sh
            command: echo "Deployed"
            # command: surge --project ./site/.vuepress/dist --domain pie-website-next.surge.sh
  buildLatest:
      <<: *defaults
      steps:
        - checkout
        # Download and cache dependencies
        - restore_cache: *restore_cache
        - run: npm install
        - save_cache: *save_cache
        # - run:
        #     name: Building The Latest Site
        #     command: npm run buildLatest
        - run:
            name: Saving artifact-file
            command: "mkdir -p /tmp/artifacts && cp ./site/.vuepress/deploy-info.json /tmp/artifacts/deploy-info-latest.json"
        - store_artifacts:
            path: /tmp/artifacts
        - run:
            name: Deploying to pie-website.surge.sh
            command: echo "Deployed"
            # command: surge --project ./site/.vuepress/dist --domain pie-website.surge.sh

workflows:
  version: 2

  build:
    jobs:
      - buildNext:
          filters:
            branches:
              only:
                - master
      - buildLatest:
          requires:
            - buildNext
          filters:
            branches:
              only:
                - master

  nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - buildNext
      - buildLatest:
          requires:
            - buildNext
